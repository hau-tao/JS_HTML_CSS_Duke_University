// border frame using a function, refactored
function setBlack(pixel){
    pixel.setRed(0);
    pixel.setGreen(0);
    pixel.setBlue(0);
    return pixel;
}
function pixelOnEdge(pixel,image, borderWidth){
    var x = pixel.getX();
    var y = pixel.getY();
    if (x <  borderWidth) return true;
    if (y <  borderWidth) return true;
    if (x >= image.getWidth() -  borderWidth) return true;
    if (y >= image.getHeight() -  borderWidth) return true;
    return false;
}
function swapRedGreen(pixel){
    var x = pixel.getRed();
    var y = pixel.getGreen();
    pixel.setRed(y);
    pixel.setGreen(x);
    return pixel;
    
}
function moreRed (pixel, value){
     var x = pixel.getRed();
     pixel.setRed(x+value);
     return pixel;
     
    
}
function pixelOnVerticalEdge(pixel, image, borderWidth){
    var x = pixel.getX();
   
    if (x <  borderWidth) return true;
   
    if (x >= image.getWidth() -  borderWidth) return true;
    
    return false;
}
function pixelOnHorizontalEdge(pixel, image, borderWidth){
    
    var y = pixel.getY();
    
    if (y <  borderWidth) return true;
    
    if (y >= image.getHeight() -  borderWidth) return true;
    return false;
}
function pixelOnEdgeDifferentThicknesses(pixel, image, borderWidthX, borderWidthY){
    
        return pixelOnVerticalEdge(pixel, image, borderWidthX) || pixelOnHorizontalEdge(pixel, image, borderWidthY);
        
    
        
  
    
}
var image = new SimpleImage("lion.jpg");
for (var pixel of image.values()) {
   if ( pixelOnEdgeDifferentThicknesses(pixel, image, 100, 100)){
       pixel = setBlack(pixel);
   }
   //swapRedGreen(pixel);
   //moreRed(pixel,150);
   
}
print(image);
